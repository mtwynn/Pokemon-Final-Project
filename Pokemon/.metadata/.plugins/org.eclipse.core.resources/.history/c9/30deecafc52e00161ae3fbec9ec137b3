package dev.mtwynn.pokemon.input;

import java.awt.event.KeyEvent;

import java.awt.event.KeyListener;

//Coded with help by CodeNMore
public class KeyManager implements KeyListener {
	
    private boolean[] keys;
    public boolean W, S, A, D, Space;
    public boolean aUp, aDown, aLeft, aRight;
    
	public KeyManager() {
		keys = new boolean[256];
	}
    
	//initializes directional variables 
    public void tick() {
    	W = keys[KeyEvent.VK_W];
    	S = keys[KeyEvent.VK_S];
    	A = keys[KeyEvent.VK_A];
        D = keys[KeyEvent.VK_D];
        Space = keys[KeyEvent.VK_SPACE];
        
        aUp = keys[KeyEvent.VK_UP];
    	aDown = keys[KeyEvent.VK_DOWN];
    	aLeft = keys[KeyEvent.VK_LEFT];
        aRight = keys[KeyEvent.VK_RIGHT];
    }
    
	public void keyTyped(KeyEvent e) {
		
	}

	//if invoked, stores a "true" boolean of the key pressed into the keys array at the respective key code
	public void keyPressed(KeyEvent e) {
		keys[e.getKeyCode()] = true;
		//System.out.println(e.getKeyCode());
	}

	//if invoked, stores a "false" boolean of the key released into the keys array at the respective key code 
	public void keyReleased(KeyEvent e) {
		keys[e.getKeyCode()] = false;
	}

}
